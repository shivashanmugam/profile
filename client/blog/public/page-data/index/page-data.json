{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Blog üè°","description":"This is where they post things!","author":{"name":"Siva Kannan"},"keywords":["Video Blogger"]}},"allMdx":{"edges":[{"node":{"excerpt":"Generator Function They‚Äôre especially good for working with multiple asynchronous steps Before we see fully about generator function let's understand a scenario why and when we need a‚Ä¶","id":"196b5e4c-c318-54b3-94bd-ea1bccd1c148","fields":{"title":"Generator Function, Javascript","slug":"demo-02","date":"2018-01-01T00:00:00.000Z"},"parent":{"__typename":"File","sourceInstanceName":"blog"},"frontmatter":{"title":"Generator Function, Javascript","date":"January 01, 2018","description":"Generator function in javascript, What is it, Working mechanism, Why we need it ? Multiple use cases","banner":null,"slug":"demo-02","keywords":null}}},{"node":{"excerpt":"Scopes & Closures Scope If a variable or function is accissible it is in the scope of execution context\nThere are three scopes\n\t- Local Scope\n\t- Clousure Scope\n\t- Global Scope Closure Scope‚Ä¶","id":"197bf971-40e7-5f59-bf23-275913bc8afe","fields":{"title":"Scopes and Closures, Javascript","slug":"javascript-scopes-and-closures","date":"2017-06-15T00:00:00.000Z"},"parent":{"__typename":"File","sourceInstanceName":"blog"},"frontmatter":{"title":"Scopes and Closures, Javascript","date":"June 15, 2017","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed molestie leo ut sodales porta. Vivamus pharetra risus ac fermentum faucibus. Nam in sodales ex.","banner":null,"slug":"javascript-scopes-and-closures","keywords":["js"]}}}]}},"pageContext":{}}}