{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Blog üè°","description":"Details into the expereiences in web development","author":{"name":"Siva Kannan"},"keywords":["Video Blogger"]}},"allMdx":{"edges":[{"node":{"excerpt":"Design Patterns There‚Äôs been a ton of articles on design patterns. This article emphasis more on why should we use it first of all in programming. What is design pattern ? There is a lot of‚Ä¶","id":"fd3e98ec-27a6-5568-ac1b-28cbf3cabe71","fields":{"title":"Design pattern","slug":"design-pattern","date":"2019-05-07T00:00:00.000Z"},"parent":{"__typename":"File","sourceInstanceName":"blog"},"frontmatter":{"title":"Design pattern","date":"May 07, 2019","description":"Generator function in javascript, What is it, Working mechanism, Why we need it ? Multiple use cases","banner":null,"slug":"design-pattern","keywords":null}}},{"node":{"excerpt":"Apply style to input field when filled and not filled without javascript Requirement\nApply custom style to input box when the field not filled and filled with text When not filled When‚Ä¶","id":"a39ddadb-a798-5c34-a7f5-6a8e603d3497","fields":{"title":"Apply style to input field when filled ( CSS only ) ","slug":"input-field-css-only-filled-not-filled","date":"2019-05-07T00:00:00.000Z"},"parent":{"__typename":"File","sourceInstanceName":"blog"},"frontmatter":{"title":"Apply style to input field when filled ( CSS only ) ","date":"May 07, 2019","description":"Apply style to input field when filled and not filled without javascript","banner":null,"slug":"input-field-css-only-filled-not-filled","keywords":null}}},{"node":{"excerpt":"Generator Function They‚Äôre especially good for working with multiple asynchronous steps Before we see fully about generator function let's understand a scenario why and when we need a‚Ä¶","id":"196b5e4c-c318-54b3-94bd-ea1bccd1c148","fields":{"title":"Generator Function Javascript","slug":"generator-function","date":"2018-01-01T00:00:00.000Z"},"parent":{"__typename":"File","sourceInstanceName":"blog"},"frontmatter":{"title":"Generator Function Javascript","date":"January 01, 2018","description":"Generator function in javascript, What is it, Working mechanism, Why we need it ? Multiple use cases","banner":null,"slug":"generator-function","keywords":null}}},{"node":{"excerpt":"Scopes & Closures Scope If a variable or function is accissible it is in the scope of execution context\nThere are three scopes\n\t- Local Scope\n\t- Clousure Scope\n\t- Global Scope Closure Scope‚Ä¶","id":"197bf971-40e7-5f59-bf23-275913bc8afe","fields":{"title":"Scopes and Closures, Javascript","slug":"javascript-scopes-and-closures","date":"2017-06-15T00:00:00.000Z"},"parent":{"__typename":"File","sourceInstanceName":"blog"},"frontmatter":{"title":"Scopes and Closures, Javascript","date":"June 15, 2017","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed molestie leo ut sodales porta. Vivamus pharetra risus ac fermentum faucibus. Nam in sodales ex.","banner":null,"slug":"javascript-scopes-and-closures","keywords":["js"]}}}]}},"pageContext":{}}}